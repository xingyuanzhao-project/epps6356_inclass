---
title: "Assignment 4"
format: html
---

```{r}
#| message: false
#| warning: false
#| echo: false

library(readxl)

df_hpi <- read_excel("HPI.xlsx", sheet=2, skip=7)
df_hpi <- df_hpi[!is.na(df_hpi$HPI), ]
```

## Plot 1: Variable Width Column Chart

**Chart Type:** Among Items → Two Variables per Item

**Justification:** Variable Width Column Chart was chosen because we need to compare items (countries) while encoding two variables simultaneously, HPI (height) and Population (width).

**Variable Selection:**

- `Country`: Items being compared
- `HPI`: First variable encoded as bar height
- `Population (thousands)`: Second variable encoded as bar width (normalized by max population)

**Data Selection:** Top 10 countries by HPI were selected using `arrange(desc(HPI)) %>% head(10)` to focus on the highest performing countries.

**Parameter Choices:**

- `coord_flip()`: Horizontal bars improve country name readability
- `width = Population/max(Population)`: Normalized width prevents extreme size differences
- `reorder(Country, HPI)`: Orders countries by HPI for easier comparison

![](a4p1.png)

## Plot 2: Table

**Chart Type:** Among Items → One Variable per Item → Many Categories

**Justification:** Regression table chosen to display multiple models (many categories) with their statistical measures.

**Model Specifications:**

Model 1: 
$$
HPI_i = \beta_0 + \beta_1 \times LifeExpectancy_i + \epsilon_i
$$

Model 2: 
$$
HPI_i = \beta_0 + \beta_1 \times GDPperCapita_i + \epsilon_i
$$

Model 3: 
$$
HPI_i = \beta_0 + \beta_1 \times LifeExpectancy_i + \beta_2 \times GDPperCapita_i + \epsilon_i
$$

**Variable Selection:**

- Variables in rows: Intercept, Life Expectancy (years), GDP per capita ($)
- Models in columns: Model 1 (Life Exp only), Model 2 (GDP only), Model 3 (both predictors)
- Model statistics: R-squared, Adjusted R-squared, N

**Data Selection:** Three regression models predicting HPI from Life Expectancy and/or GDP per capita.

**Parameter Choices:**

- `sprintf()`: Formats coefficients with standard errors in parentheses below
- Significance stars (***): Indicates statistical significance
- Variables as rows, models as columns: Standard format
- `grid.table()`: Displays formatted regression results in tabular form

<div style="margin: 10px 0; padding: 0;">
<img src="a4p2.png" style="width: 100%; min-width: 1000px; height: auto; display: block;">
</div>

## Plot 3: Bar Chart

**Chart Type:** Among Items → One Variable per Item → Few Categories → Many Items

**Justification:** Side-by-side horizontal bar charts chosen to compare many items (20 countries total: top 10 and bottom 10) across two categories.

**Variable Selection:**

- `Country`: Many items being compared (10 per category)
- `HPI`: Single variable measured across all items
- Categories: Top performers vs Bottom performers

**Data Selection:** Top 10 and Bottom 10 countries by HPI, arranged by `arrange(desc(HPI))` and `arrange(HPI)` respectively.

**Parameter Choices:**

- `par(mfrow = c(1, 2))`: Creates side-by-side subplots for visual comparison
- `horiz = TRUE`: Horizontal bars accommodate country names
- `las = 1`: Horizontal label orientation for readability
- Different colors (`coral` vs `lightblue`): Distinguishes the two categories
- Two separate barplots: Shows contrast between high and low performers

![](a4p3.png)

## Plot 4: Column Chart

**Chart Type:** Among Items → One Variable per Item → Few Categories → Few Items

**Justification:** Grouped column chart with dual y-axes chosen to compare few items (5 countries) on two variables with different scales (HPI and Life Expectancy).

**Variable Selection:**

- `Country`: Few items arranged for clarity
- `HPI`: First variable (left y-axis)
- `Life Expectancy (years)`: Second variable (right y-axis, scaled)

**Data Selection:** Top 5 countries by HPI selected using `arrange(desc(HPI)) %>% head(5)`.

**Parameter Choices:**

- `position_nudge()`: Offsets bars horizontally (±0.2) for side-by-side display
- `width = 0.4`: Narrower bars to accommodate two variables per country
- `scale_y_continuous()` with `sec.axis`: Creates dual y-axes for different scales
- `scaling_factor = 100 / max(Life Expectancy)`: Scales Life Expectancy to comparable range with HPI
- `fill` aesthetic: Distinguishes between HPI and Life Expectancy bars
- `reorder(Country, HPI)`: Orders countries by HPI ranking

![](a4p4.png)
